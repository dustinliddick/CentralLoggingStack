#########
# INPUT #
#########
input {
        redis {
                host => "10.38.2.65"
                data_type => "list"
                key => "logstash"
        }
}
########################
# FILTERING / TAGGING  #
########################
filter {
        if [type] == "syslog" {
                mutate {
                        add_tag => [ "RHEL" ]
                        add_tag => [ "syslog" ]
                }
        }
        if [type] == "VMware" {
                mutate {
                        add_tag => "VMware"
                }
        }
        if [type] == "vCenter" {
                mutate {
                        add_tag => "vCenter"
                }
        }
        if [type] == "eventlog" {
                mutate {
                        add_tag => [ "WindowsEventLog" ]
                }
        }
        if [type] == "apache" {
                mutate {
                       add_tag => [ "apache" ]
                }
        }
        if [type] == "iis" {
                mutate {
                        add_tag => [ "IIS" ]
                }
        }
}
############################################
# First layer of normal RHEL log parsing #
############################################

##########
# SYSLOG #
##########


############
# EventLog #
############


############################
# Nagios Filter for alerts #
############################

filter {
        if [type] == "syslog" {
                grok {
                        patterns_dir => "/etc/logstash/patterns"
                        match => [
                                "message", "%{SYSLOGLINE} nagios log test"
                        ]
                        add_tag => [ "nagios_check_syslog_test" ]
                        add_field => [
                                "nagios_service", "LogstashAlertTest"
                                ]
                }
        }
}
##############################################################
# Microsoft IIS logging....Use NXLOG for client side logging #
##############################################################


###################################################################################################################################
# The below filter section will be used to remove unnecessary fields to keep ES memory cache from filling up with useless data    #
# The below filter section will be where you would want to comment certain types or tags out if trying to isolate a logging issue #
###################################################################################################################################
filter {
        if [type] == "apache" {
                mutate {
                        remove_field => [ "clientip", "host", "timestamp" ]
                }
        }
        if [type] == "eventlog" {
                mutate {
                        remove => [ "SourceModuleType", "EventTimeWritten", "EventTime", "EventReceivedTime", "EventType" ]
                }
        }
        if "HAProxy" in [tags] {
                mutate {
                        remove_field => [ "accept_date", "haproxy_hour", "haproxy_milliseconds", "haproxy_minute", "haproxy_month", "haproxy_monthday", "haproxy_second", "haproxy_time", "haproxy_year", "pid", "program", "syslog_server" ]
                }
        }
        if [type] == "iis" {
                mutate {
                        remove_field => [ "clientip", "host", "hostname", "logtime" ]
                }
        }
        if [type] =~ "nginx" {
                mutate {
                        remove_field => [ "clientip", "host", "timestamp" ]
                }
        }
        if "Netscaler" in [tags] {
                mutate {
                        remove_field => [ "clientip" ]
                }
        }
        if [type] == "syslog" {
                mutate {
                        remove_field => [ "host", "received_at", "received_from", "syslog_hostname", "syslog_message", "syslog_timestamp" ]
                }
        }
        if [type] == "VMware" {
                mutate {
                        remove_field => [ "host", "program", "syslog_hostname", "syslog_message", "syslog_timestamp" ]
                }
        }
        if [type] == "vCenter" {
        mutate {
                        remove_field => [ "host", "message-body", "program", "syslog_hostname", "syslog_message", "syslog_timestamp" ]
                }
        }
}


######################################################################################################################################################
#### Multicast discovery mode ####                                                                                                                   #
# Send output to the ES cluster logstash-cluster using a predefined template                                                                         #
# The following settings will be used during the initial setup which will be used for using multicast ES nodes                                       #
# When changing to unicast discovery mode you need to comment out the following section and configure the unicast discovery mode in the next section #
######################################################################################################################################################

output {
        elasticsearch {
                cluster => "logstash-cluster"
                host => "elkes-ob-1p"
                port => "9300"
                protocol => "node"
                flush_size => 1
                manage_template => true
                template => "/opt/logstash/lib/logstash/outputs/elasticsearch/elasticsearch-template.json"
        }
if "nagios_check_syslog_test" in [tags] {
        nagios_nsca {
                host => "10.8.31.12"
                port => 5667
                send_nsca_bin => "/opt/collegis/software/nagios/nsca-2.9.1/src/send_nsca"
                nagios_host => "localhost"
                nagios_service => "LogstashAlertTest"
                nagios_status => 2
                message_format => "%{SYSLOGTIME}  %{SYSLOGHOST}"
                }
        }
}