#############
# Cisco ASA #
#############
filter {
	if "cisco-asa" in [tags] {
		grok {
			patterns_dir => "/opt/logstash/patterns"
			break_on_match => false
			match => [ "message", "%{CISCO_TAGGED_SYSLOG}" ]
		}
		grok {
			match => [
				"message", "%{CISCOFW106001}",
				"message", "%{CISCOFW106006_106007_106010}",
				"message", "%{CISCOFW106014}",
				"message", "%{CISCOFW106015}",
				"message", "%{CISCOFW106021}",
				"message", "%{CISCOFW106023}",
				"message", "%{CISCOFW106100}",
				"message", "%{CISCOFW110002}",
				"message", "%{CISCOFW302010}",
				"message", "%{CISCOFW302013_302014_302015_302016}",
				"message", "%{CISCOFW302020_302021}",
				"message", "%{CISCOFW305011}",
				"message", "%{CISCOFW313001_313004_313008}",
				"message", "%{CISCOFW313005}",
				"message", "%{CISCOFW402117}",
				"message", "%{CISCOFW402119}",
				"message", "%{CISCOFW419001}",
				"message", "%{CISCOFW419002}",
				"message", "%{CISCOFW500004}",
				"message", "%{CISCOFW602303_602304}",
				"message", "%{CISCOFW710001_710002_710003_710005_710006}",
				"message", "%{CISCOFW713172}",
				"message", "%{CISCOFW733100}"
			]
	}
		geoip {
			#type => "stingray"
			add_tag => [ "geoip" ]
			source => "src_ip"
			database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
		}
	}
		mutate {
			tags => [ "geoip" ]
			# 'coords' will be kept, 'tmplat' is temporary.
			# Both of these new fields are strings.
			add_field => [ "coords", "%{geoip.longitude}",
                "tmplat", "%{geoip.latitude}" ]
         }
		mutate {
			tags => [ "geoip" ]
			# Merge 'tmplat' into 'coords'
			merge => [ "coords", "tmplat" ]
        }
		mutate {
			tags => [ "geoip" ]
			# Convert our new array of strings back to float
			convert => [ "coords", "float" ]
			# Delete our temporary latitude field
			remove => [ "tmplat" ]
        }
# Takes the 4-tuple of source address, destination address, destination port,
# and protocol and does a SHA1 hash to fingerprint the flow.  This is a useful
# way to be able to do top N terms queries on flows, not just on one field.

if "cisco-asa" in [tags] and [src_ip] and [dst_ip] {
		fingerprint {
			concatenate_sources => true
			method => "SHA1"
			key => "logstash"
			source => [ "src_ip", "dst_ip", "dst_port", "protocol" ]
		}
}
if [geoip][city_name] == "" { mutate { remove_field => "[geoip][city_name]" } }
if [geoip][continent_code] == "" { mutate { remove_field => "[geoip][continent_code]" } }
if [geoip][country_code2] == "" { mutate { remove_field => "[geoip][country_code2]" } }
if [geoip][country_code3] == "" { mutate { remove_field => "[geoip][country_code3]" } }
if [geoip][country_name] == "" { mutate { remove_field => "[geoip][country_name]" } }
if [geoip][latitude] == "" { mutate { remove_field => "[geoip][latitude]" } }
if [geoip][longitude] == "" { mutate { remove_field => "[geoip][longitude]" } }
if [geoip][postal_code] == "" { mutate { remove_field => "[geoip][postal_code]" } }
if [geoip][region_name] == "" { mutate { remove_field => "[geoip][region_name]" } }
if [geoip][time_zone] == "" { mutate { remove_field => "[geoip][time_zone]" } }

# Parse the date
		date {
			match => ["timestamp",
                "MMM dd HH:mm:ss",
                "MMM d HH:mm:ss",
                "MMM dd yyyy HH:mm:ss",
                "MMM d yyyy HH:mm:ss"
                ]
        }
}
